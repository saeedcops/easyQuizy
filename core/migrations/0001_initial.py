# Generated by Django 3.1.5 on 2021-02-02 08:51

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('facebook_image', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.CharField(max_length=255, unique=True)),
                ('facebook_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('facebook_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('friend', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255, null=True), blank=True, null=True, size=None)),
                ('flag', models.CharField(max_length=50)),
                ('token', models.CharField(max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player1_id', models.IntegerField(blank=True, null=True)),
                ('player2_id', models.IntegerField(blank=True, null=True)),
                ('player1_score', models.IntegerField(blank=True, null=True)),
                ('player2_score', models.IntegerField(blank=True, null=True)),
                ('player1_answer', models.CharField(blank=True, max_length=255, null=True)),
                ('player2_answer', models.CharField(blank=True, max_length=255, null=True)),
                ('question', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=255)),
                ('correct', models.CharField(max_length=255)),
                ('question_num', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('first_prize', models.IntegerField()),
                ('scond_prize', models.IntegerField()),
                ('rest_prize', models.IntegerField()),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_friend', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255, null=True), blank=True, null=True, size=None)),
                ('facebook_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('image', models.CharField(max_length=255)),
                ('level', models.IntegerField(default=1)),
                ('score', models.IntegerField(default=0)),
                ('win', models.IntegerField(default=0)),
                ('loss', models.IntegerField(default=0)),
                ('draw', models.IntegerField(default=0)),
                ('next_gift', models.DateTimeField(auto_now_add=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('coins', models.IntegerField(default=2000)),
                ('gem', models.IntegerField(null=True)),
                ('league_coins', models.IntegerField(default=0)),
                ('flag', models.CharField(max_length=50)),
                ('token', models.CharField(max_length=255, null=True)),
                ('friends', models.ManyToManyField(blank=True, related_name='friend', to='core.Profile')),
                ('my_league', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.league')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-league_coins'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, unique=True)),
                ('category', models.CharField(max_length=255)),
                ('answer', models.CharField(max_length=255)),
                ('obtion1', models.CharField(blank=True, max_length=255)),
                ('obtion2', models.CharField(blank=True, max_length=255)),
                ('obtion3', models.CharField(blank=True, max_length=255)),
                ('obtion4', models.CharField(blank=True, max_length=255)),
                ('image', models.CharField(blank=True, max_length=255)),
                ('time', models.IntegerField()),
                ('question_type', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('avaliable', models.BooleanField(default=True)),
                ('is_facebook', models.BooleanField(default=False, null=True)),
                ('player1_prize', models.IntegerField()),
                ('player2_prize', models.IntegerField(null=True)),
                ('player1_profile', models.IntegerField()),
                ('player2_profile', models.IntegerField(blank=True, default=0, null=True)),
                ('player1_score', models.IntegerField(default=0)),
                ('player2_score', models.IntegerField(default=0)),
                ('player1_left', models.BooleanField(default=False)),
                ('player2_left', models.BooleanField(default=False)),
                ('player1_answered', models.IntegerField(default=0)),
                ('player2_answered', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('player1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='player1', to='core.profile')),
                ('player2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='player2', to='core.profile')),
                ('players_answer', models.ManyToManyField(blank=True, related_name='players_answer', to='core.Answer')),
                ('questions', models.ManyToManyField(blank=True, related_name='questions', to='core.Question')),
            ],
        ),
        migrations.AddField(
            model_name='league',
            name='profiles',
            field=models.ManyToManyField(blank=True, to='core.Profile'),
        ),
        migrations.AddField(
            model_name='answer',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room', to='core.room'),
        ),
    ]
